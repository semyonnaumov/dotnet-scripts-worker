worker:
  sandbox:
    runner-type: linux-amd64-dotnet-7
    max-containers: 2
    container-operations-timeout-ms: 60000 # 1 min
    job-timeout-ms: 120000 # 2 min
    container-image: sandbox:${worker.sandbox.runner-type}
    container-name-prefix: sandbox-job-
    job-files-host-dir: /Users/snaumov/Desktop/scripts # TODO change to /tmp/scripts in Dockerfile
    job-files-container-dir: /tmp/script # DinD container script file location
    script-file-name: main.csx
  docker-client:
    docker-host: unix:/var/run/docker.sock # or just tcp://localhost:2376
    docker-tls-verify: false
    docker-cert-path: /Users/snaumov/.docker
    registry-url: registryUrl
    registry-user: registryUser
    registry-password: registryPass
    registry-email: registryMail
    max-connections: 100
    connection-timeout-sec: 30
    response-timeout-sec: 45
  kafka:
    broker-url: localhost:8097
    reconnect-backoff-ms: 100
    reconnect-backoff-max-ms: 10000
    jobs-topic-name: pending-${worker.sandbox.runner-type}
    running-topic-name: running
    finished-topic-name: finished
    producer-acks: 1
    consumer-concurrency: ${worker.sandbox.max-containers}
    consumer-group: workers.${worker.sandbox.runner-type}
  kafka-admin:
    broker-url: ${worker.kafka.broker-url}
    reconnect-backoff-ms: ${worker.kafka.reconnect-backoff-ms}
    reconnect-backoff-max-ms: ${worker.kafka.reconnect-backoff-max-ms}
    replication-factor: 2
    jobs-topic-name: ${worker.kafka.jobs-topic-name}
    jobs-topic-partitions: 2
    running-topic-name: ${worker.kafka.running-topic-name}
    running-topic-partitions: 2
    finished-topic-name: ${worker.kafka.finished-topic-name}
    finished-topic-partitions: 2

logging:
  level:
    com.naumov.dotnetscriptsworker: debug
